#Redis properties
spring.redis.database=0
spring.redis.host=redis-0606
spring.redis.url=redis-0606
spring.redis.password=knJUmF5+CWBMSkRVzlQ1FA==
spring.redis.port=6379
spring.redis.timeout=5000

#Spring redis pool configuration
spring.redis.jedis.pool.max-total=8
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.min-idle=0
spring.redis.jedis.pool.lifo=true
spring.redis.jedis.pool.fairness=false
spring.redis.jedis.pool.max-wait-millis=60000
spring.redis.jedis.pool.min-evictable-idle-time-millis=60000
spring.redis.jedis.pool.evictor-shutdown-timeout-millis=10000
spring.redis.jedis.pool.soft-min-evictable-idle-time-millis=-1
spring.redis.jedis.pool.num-tests-per-eviction-run=-1
spring.redis.jedis.pool.test-on-create=false
spring.redis.jedis.pool.test-on-borrow=false
spring.redis.jedis.pool.test-on-return=false
spring.redis.jedis.pool.test-while-idle=true
spring.redis.jedis.pool.time-between-eviction-runs-millis=30000
spring.redis.jedis.pool.block-when-exhausted=true
spring.redis.jedis.pool.jmx-enabled=true
spring.redis.jedis.pool.jmx-name-prefix=redis_pool
spring.redis.jedis.pool.jmx-name-base=null

#Mongo
spring.data.mongodb.username=eauth
spring.data.mongodb.password=IEHoDJJqvaZdjdbAYPOQYg==
spring.data.mongodb.port=27017
spring.data.mongodb.host=mongo-service
spring.data.mongodb.database=idxadmin
spring.data.mongodb.min-connection-per-host=10
spring.data.mongodb.max-connection-per-host=100
spring.data.mongodb.threads-allowed-to-block-for-connection-multiplier=5
spring.data.mongodb.server-selection-timeout=60000
spring.data.mongodb.max-wait-connection-timeout=10000
spring.data.mongodb.max-connection-idle-time=0
spring.data.mongodb.max-connection-life-time=0
spring.data.mongodb.connection-timeout=10000
spring.data.mongodb.socket-timeout=40000
spring.data.mongodb.max-heartbeat-frequency=10000
spring.data.mongodb.min-heartbeat-frequency=500
spring.data.mongodb.heartbeat-connection-timeout=20000
spring.data.mongodb.heartbeat-socket-timeout=20000

# Messaging layer configuration
messaging.layer.provider=RABBITMQ
messaging.layer.host=rabbit
messaging.layer.port=5672
messaging.layer.username=eauthadmin
messaging.layer.password=D7PuSuUncwaw9Zkjw0Pu6w==
#messaging.layer.password=eauthadmin@123
messaging.layer.poolsize=25
messaging.layer.timeout=60000
messaging.layer.heartbeat=60
messaging.layer.reply.timeout=60000
messaging.layer.concurrent.consumers=1
#publish audit log queue 
messaging.layer.queuename=qa_auditlogs
rabbitmq.virtual.host=/

#RMQ properties for Acces Server
#spring.rabbitmq.host=10.132.214.212
#spring.rabbitmq.listener.direct.acknowledge-mode=MANUAL
#spring.rabbitmq.password=ENC(D7PuSuUncwaw9Zkjw0Pu6w==)
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=eauthadmin

# MBSS configuration
mbss.rabbitmq.host=mbss-service
mbss.rabbitmq.port=5672
mbss.rabbitmq.user.name=mbss
mbss.rabbitmq.user.password=gytNxf8CMGrkS1niWQhzTg==
mbss.rabbitmq.exchange.name=tera.public
mbss.rabbitmq.heartbeat=60
mbss.rabbitmq.timeout=60000
mbss.pool.max.size=10
mbss.pool.max.idle.instance=8
mbss.pool.min.idle.instance=0
mbss.pool.max.wait.time=-1
mbss.pool.min.evictable.idle.time=1800000
mbss.pool.test.on.borrow=false
mbss.pool.test.on.return=false
mbss.pool.evictor.shutdown.timeout=10000


# MySQL database
multi-tenant.default-database=idxadmin
multi-tenant.master.database.connection-timeout=300000
multi-tenant.master.database.ddl-auto=none
multi-tenant.master.database.driver-class=com.mysql.cj.jdbc.Driver
multi-tenant.master.database.enabled=true
multi-tenant.master.database.idle-timeout=300000
multi-tenant.master.database.max-life-time=1200000
multi-tenant.master.database.maximum-pool-size=500
multi-tenant.master.database.minimum-idle=100
multi-tenant.master.database.password=58Q7Sg9XsPMXRw2jpfxh0Q==
#multi-tenant.master.database.password=password
multi-tenant.master.database.show-sql=false
multi-tenant.master.database.url=jdbc:mysql://mysql-service:6446/idxadmin?useSSL=false&characterEncoding=utf-8
multi-tenant.master.database.user-name=root
multi-tenant.master.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
multi-tenant.scripts.data-file=db/tenant_scripts/02_insert.sql
multi-tenant.scripts.schema-file=db/tenant_scripts/01_init_db.sql


#SMTP Properties
#Email  server host/IP

email.config.host=10.220.6.5

#Email server password

email.config.password=
#Email server port

email.config.port=25

#Email server username

email.config.username=ppd.admin@idemiaeauth.com


#---------------------------------------------------------------------------------------------------------------------
# TWILLIO CONFIGURATION FOR MESSAGING
#---------------------------------------------------------------------------------------------------------------------
#Twilio Account info
TWILIO_ACCOUNT_SID=ACe691c9c1e652011f51ba200c4bc1f329
TWILIO_AUTH_TOKEN=d3d23c089b55dbb9d7e912574954beeb
TWILIO_FROM_NUMBER=++1415347-8753
#---------------------------------------------------------------------------------------------------------------------

#----------------------------------------------------------------------------------------------------------------------
#Route Mobile Configuration for OTP
#---------------------------------------------------------------------------------------------------------------------
sms.smtchp.generateotp.url=http://sms6.rmlconnect.net:8080/OtpApi/otpgenerate
sms.smtchp.validateotp.url=http://sms6.rmlconnect.net:8080/OtpApi/checkotp
sms.smtchp.auth.username=smartchipotp
sms.smtchp.auth.password=z07YlmrHKbvXvoYA1/N5nw==
sms.smtchp.source=SMTCHP
sms.smtchp.exptime=120
sms.smtchp.otplen=6
#---------------------------------------------------------------------------------------------------------------------
##########################################################################################
##											##
##					COMMON RPC Queue				##
##											##
##########################################################################################
#================================================================================
#						AUDIT SERVICE			#
#================================================================================
idx.rpc.audit.logs.queue=qa_auditlogs
#================================================================================

#================================================================================
#						BIO SERVICE			#
#================================================================================
idx.rpc.bio.auth.finger.queue=FINGER_AUTHENTICATION
idx.rpc.bio.auth.finger.v4.queue=FINGER_AUTHENTICATION_V4

idx.rpc.bio.auth.face.queue=FACE_AUTHENTICATION
idx.rpc.bio.auth.face.v4.queue=FACE_AUTHENTICATION_V4

idx.rpc.bio.mbss.face.identify.queue=MBSS_FACE_IDENTIFY
idx.rpc.bio.mbss.face.identify.v4.queue=MBSS_FACE_IDENTIFY_V4

idx.rpc.bio.mbss.face.fetch.queue=MBSS_FETCH_FACE_TEMPLATE
idx.rpc.bio.mbss.face.compare.queue=MBSS_FACE_COMPARE

idx.rpc.bio.mbss.enroll.finger.queue=MBSS_FINGER_ENROLLMENT
idx.rpc.bio.mbss.enroll.face.queue=MBSS_FACE_ENROLLMENT

#selfie fetch consumer
idx.rpc.bio.selfie.fetch.queue=SELFIE_FETCH_QUEUE

#old version consumer
idx.rpc.bio.enroll.demographic.queue=DEMOGRAPHIC_ENROLLMENT
idx.rpc.bio.enroll.demographic.v5.queue=DEMOGRAPHIC_ENROLLMENT_V5
idx.rpc.bio.enroll.demographic.v6.queue=DEMOGRAPHIC_ENROLLMENT_V6

idx.rpc.bio.user.fetch.queue=USER_FETCH
idx.rpc.bio.user.fetch.v5.queue=USER_FETCH_V5
idx.rpc.bio.user.fetch.v6.queue=USER_FETCH_V6

idx.rpc.bio.identity.update.queue=IDENTITY_UPDATE
idx.rpc.bio.identity.update.v6.queue=IDENTITY_UPDATE_V6

#================================================================================


#================================================================================
#						DOC STORE		        #
#================================================================================
#Document upload
idx.rpc.docstore.doc.upload.queue=USER_DOCUMENT_UPLOAD

#Document upload Version 1
idx.rpc.docstore.doc.upload.v1.queue=USER_DOCUMENT_UPLOAD_V1

#Fetch document list
idx.rpc.docstore.doc.fetch.list.queue=USER_DOCUMENT_FETCH_LIST

#Document Fetch By id
idx.rpc.docstore.doc.user.fetch.queue=USER_DOCUMENT_FETCH

#Document delete By id
idx.rpc.docstore.doc.delete.byid.queue=USER_DOCUMENT_DELETE_ID

#Document delete all Document
idx.rpc.docstore.doc.delete.queue=USER_DOCUMENT_DELETE

#Count Document
idx.rpc.docstore.doc.count.queue=DOCUMENT_COUNT

#Doc User Info Queue Name
idx.rpc.docstore.doc.user.info.queue=doc_user_info_queue
#===============================================================================

#================================================================================
#					License Update		                #
#================================================================================
#License update
license-service-queue-name=update-license-service-queue

#================================================================================

#================================================================================
#					IDORCH Service				#
#================================================================================
idx.rpc.messaging.fanout.queue=FANOUT
#idx.rpc.idorch.response.queue=response-topic
idx.rpc.license.queue=license-queue
idx.rpc.teanat.status.queue=tenant-status-queue
#idorch-api
idx.rpc.idorch.api.status.workflow.queue=WORKFLOW_STATUS
idx.rpc.idorch.api.workflow.license.queue=workflow-license-queue
idx.rpc.idorch.api.workflow.tenant.status.queue=workflow-tenant-status-queue
idx.rpc.idorch.execute.workflow.queue=execute-workflow-queue
idx.rpc.idorch.workflow.status.queue=workflow-status-queue
idx.rpc.license.validate.queue=validate-license-v1
idx.rpc.update.license.counter.v1.queue=update-license-counter-v1
idx.rpc.idorch.api.webhook.queue=webhook-topic
#idorch-eauth
idx.rpc.idorch.eauth.queue=eauth-topic
#idorch-dob
idx.rpc.idorch.dob.queue=dob-topic
#idorch-ipv
idx.rpc.idorch.ipv.license.queue=ipv-license-queue
idx.rpc.idorch.ipv.tenant.status.queue=ipv-tenant-status-queue
idx.rpc.idorch.ipv.queue=ipv-topic
#idorch-urc
idx.rpc.idorch.urc.license.queue=urc-license-queue
idx.rpc.idorch.urc.tenant.status.queue=urc-tenant-status-queue
idx.rpc.idorch.urc.queue=urc-topic
#================================================================================

#================================================================================
#					Regula OCR			        #
#================================================================================
idx.rpc.ocr.doc.submit.queue=SUBMIT_DOC_OCR
idx.rpc.ocr.doc.submit.v2.queue=SUBMIT_DOC_OCR_V2
idx.rpc.ocr.doc.result.queue=GET_OCR_RESULTS
#================================================================================

#================================================================================
#					Abbyy OCR				#
#================================================================================
#service specific messaging properties - Queue names for submit doc and get result RPC
idx.rpc.abbyy.ocr.result.queue=abbyyocrresult
idx.rpc.abbyy.ocr.submit.queue=abbyysubmitdoc
#================================================================================

##########################################################################################
##											##
##					COMMON RPC Queue END				##
##											##
##########################################################################################
#================================================================================
# 		Inter service communication related properties			#
#================================================================================
#Tenant config url to get various resources tenant based setting i.e. for mongo, rabbit etc.
tenant.config.url=http://tenant-service:9080/tenant-management/admin/config/
#================================================================================

#================================================================================
# 		KMS related properties						#
#================================================================================
#This token is recieved after successfull auth from vault
#kms.vault.initialtoken=s.A5fxWutfW12a3NGAY2pHWtLd
#kms.vault.initialtoken=s.4L7yfxvlAOw9ZYiUhQQec8MG
#kms.vault.initialtoken=s.KjTdm5oT079vAXgOjKMkTuTV
kms.vault.initialtoken=s.Ykwciz7AWmxUWNYidSFQRYQe
#Vault url
#kms.vault.uri=http://10.132.214.178:8200
kms.vault.uri=http://vault-service:8200
#Role for accessing vault
kms.vault.appRole=idx_read
kms.vault.transitKeyName=transitKey
kms.vault.datakeyPathPrefix=idx
kms.vault.platformKeysPath=platformKeys
kms.vault.additionalKeysPath=additionalKeys
#For using mongo as key storage use false, true means vault will be used for the key storage.
platform.vault.enable=true
#================================================================================
# 		URL to bypass in tenant validation filter		        #
#================================================================================
urls.for.bypass.filter.ignore=/v2/api-docs
   
#=========================================
#       Properties used for mongodb HA  #
#=========================================
#Read prefernce for mongo
spring.data.mongodb.readPreference=secondaryPreferred
spring.data.mongodb.maxStalenessSeconds=100
#below property added for v6.5.1.0
file.storage.type=MONGO

#===========================================================================
#Changes for 6.6.0
#===========================================================================
# New Redis Queues for ADJUDICATION step (Release 6.6.0.0)
idx.rpc.bio.adjudicate.queue=ADJUDICATION_QUEUE

idx.rpc.idorch.api.orchestration.queue=orchestration-queue
idx.rpc.idorch.api.step.request.queue=step-request-queue
idx.rpc.idorch.response.queue=step-response-queue
idx.rpc.idorch.workflow.queue=WORKFLOW_STATUS_QUEUE
 
#==========================================
#DATE FORMAT SUPPORT FOR spEL(RULE MAPPER)
idorch.api.request.date.formatter=dd-MM-YYYY,dd/MM/YYYY,MM/dd/YYYY,yyyy-MM-dd HH:mm:ss.SSS,yyyy-MM-dd
#============================================

# From Email Configuration for User welcome mail (Release 6.6.0.0.)
email.config.fromEmail=ppd.admin@idemiaeauth.com
 
#XSS Scripting VA issue to be included in all components (Release 6.6.0.0.)
idx.xss.old.filter.enable=false

#Engine path for accessing vault
kms.vault.enginePath=secret
